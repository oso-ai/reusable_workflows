name: unit_tests_prod
on:
  workflow_call:
    inputs:
      dvc_check:
        description: "Run dvc status if true, else ignore this step"
        required: false
        type: string
        default: 'true'
      executor:
        description: "Execute unit tests with pytest or python"
        type: string
        default: pytest -v
      files_to_pull:
        description: "Files to pull to execute unit test, separated by space"
        type: string
        default: 'null'
        required: false

    secrets:
        AWS_ACCESS_KEY_ID:
          required: true
        AWS_SECRET_ACCESS_KEY:
          required: true
        OSO_UTILS_ACCESS_TOKEN:
          required: false

jobs:
  unit_tests_prod:
    name: unit tests for production
    runs-on: ubuntu-latest
    steps:
      - name: Install libsndfile-dev
        run: sudo apt-get update -y && sudo apt-get install -y libsndfile-dev
      - name: checks
        uses: actions/checkout@v3 # checkout the repository content to github runner.
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8 #install the python needed

      - name: fetch
        run: |
          git fetch --prune
          git config pull.rebase true
          echo 
          git pull origin $(echo ${GITHUB_REF#refs/heads/})

      - name: add token for oso_utils if secret is present
        env:
          OSO_UTILS_ACCESS_TOKEN: ${{ secrets.OSO_UTILS_ACCESS_TOKEN }}
        if: env.OSO_UTILS_ACCESS_TOKEN != null
        run: git config --global url."https://${{ secrets.OSO_UTILS_ACCESS_TOKEN }}@github.com".insteadOf "ssh://git@github.com"

      - name: install requirements
        id: install-requirements
        run: |
          python -m venv ./.venv && source ./.venv/bin/activate
          if [ -f install_requirements.sh ]; then
            echo "new requirements system"
            bash install_requirements.sh prod
          elif [ -f requirements_prod.txt ]; then
            echo "Standard requirements system"
            pip install -r requirements_prod.txt
          else
            echo "Neither requirements_prod.txt, neither install_requirements.sh, exiting"
            exit 1
          fi
          pip install pytest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Dvc status / pull
        if: ${{ inputs.dvc_check == 'true' }}
        run: |
          pip install dvc['s3']
          dvc repro --allow-missing -q
          pip install dvc['s3']==2.57
          if dvc data status --not-in-remote | grep "Not in remote"
          then
              exit 1
          fi

          if [ ${{ inputs.files_to_pull }} != 'null' ]
          then
              dvc pull -q ${{ inputs.files_to_pull }}
          fi

      - name: Unit test
        run: |
          source ./.venv/bin/activate
          echo ${{ inputs.executor }}
          ${{ inputs.executor }} unit_tests/test_prod.py
